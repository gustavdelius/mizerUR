% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/UR_dynamics.R
\name{carrion_dynamics}
\alias{carrion_dynamics}
\title{Carrion dynamics}
\usage{
carrion_dynamics(
  params,
  n,
  n_pp,
  n_other,
  rates,
  t,
  dt,
  carrion_external = params@other_params$UR$carrion_external,
  ...
)
}
\arguments{
\item{params}{A \link{MizerParams} object}

\item{n}{A matrix of current species abundances (species x size)}

\item{n_pp}{A vector of current plankton abundance by size}

\item{n_other}{List of abundances of other dynamic components}

\item{rates}{A list of rates as returned by \code{\link[=getRates]{getRates()}}}

\item{t}{Current time}

\item{dt}{Time step size}

\item{carrion_external}{External inflow rate of carrion biomass}

\item{...}{Unused}
}
\value{
A single number giving the biomass of carrion at next time step
}
\description{
Calculates the biomass of carrion (dead animals) at the next timestep from
the current biomass.
}
\details{
The equation for the time evolution of the carrion biomass \eqn{B} is
assumed to be of the form
\deqn{dB/dt = inflow - consumption * B + external}
where
\itemize{
\item \code{inflow} comes from
\itemize{
\item Discards from fishing.
\item Animals killed by fishing gear.
\item Animals that have died by causes other than predation.
}
\item \code{consumption} is by scavenger species, where the encounter rate is
specified by \code{rho[, "carrion", ]}.
\item \code{external} is an influx from external sources. It can be negative in which
case it represents a loss to external sources.
}

This equation is solved analytically to
\deqn{B(t+dt) = B(t)\exp(-\tt{consumption} \cdot dt)
  +\frac{\tt{inflow} + \tt{external}}{\tt{consumption}}
  (1-\exp(-\tt{consumption} \cdot dt)).}{B(t+dt)
  = B(t) exp(-consumption * dt)
  +(inflow + external)/(consumption) * (1 - exp(-consumption * dt)).}
This avoids the stability problems that would arise if we used the Euler
method to solve the equation numerically.
}
\seealso{
Other resource dynamics functions: 
\code{\link{detritus_dynamics}()}
}
\concept{resource dynamics functions}
